---
alwaysApply: true
---
我想要开发一个负责数据合成的multi-agent 项目，请你帮我分析开发这个项目的可行性，并帮我产出一个详细的开发计划。


数据合成流程如下：
1.我们先让模型生成几百个场景比如外卖，微博，微信…，然后基于场景生成几千个tools，比如点个外卖，发送微博，查找联系人

* 具体来说，我们首先从关键类别开始（例如，金融交易、软件应用、机器人控制），然后在每个类别内拓展出多个具体的应用领域。针对每个领域，接着设计并整合专用的工具，配备清晰的接口、描述和运行语义。

2.然后基于不同的tool组合生成几百上千个不同的Agent （不同的sytem prompt+不同的tool set）

* 具体来说。我们通过合成不同的系统提示，并为其配备我们资源库中不同组合的工具(组合3-6个不同的工具)，生成了数千个不同的智能体。这样就形成了一个拥有多样能力、专长领域和行为模式的多元化智能体群体，从而确保能够广泛覆盖各种潜在的应用场景。

3.接下来我们针对每一个不同的agent生成从简单到复杂的具有得分点的任务。

* 对于每种agent configuration，我们都会生成从简单到复杂的任务。每个任务都配有明确的评分标准，详细说明了成功标准、预期的工具使用模式以及评估检查点。这种基于评分标准的方法确保了对代理性能进行一致且客观的评估。


4.最后，Multi-turn Trajectory Generation：

* 用户模拟：由大语言模型（LLM）生成的具有不同沟通风格和偏好的用户角色，与智能体进行多轮对话，创造出自然的互动模式。
* 工具执行环境：一个复杂的工具模拟器（在功能上等同于世界模型）负责执行工具调用，并提供真实的反馈。该模拟器在每次工具执行后维护并更新状态，从而能够实现具有持久影响的复杂多步交互。它引入了受控的随机性，以产生多样化的结果，包括成功、部分失败和边缘情况。
*  先把任务分配给一个模拟的用户，让用户根据任务和对应agent多轮交互，用户也是生成出来的有不同的个性和语言风格。接下来agent调用的工具也通过tool模拟器其实等价于world model来执行，并反馈给agent继续处理。



5.轨迹评分：执行完整个任务后，我们再用裁判根据得分点来评估agent交互轨迹是否符合要求，只有符合标准的轨迹才会被保留下来用于训练，这样既能确保数据的高质量，又允许任务完成策略的自然多样性。



开发要求：

在完成用户的任务，开发或修改代码时，请你先仔细分析项目的代码，并在合适的位置进行修改。
请保证最小化修改，并移除掉修改后应该被废弃的代码。
在新增或修改代码时，请确保代码被放在项目中合适的位置，确保满足项目和框架结构，项目整体结构不被破坏。